# ~/.shrc
# User-level interactive shell configuration

case "$TERM" in
(linux|vt???)
	gui=false
	;;
(*)
	gui=true
	;;
esac

# Set up history management
case "$KSH_VERSION" in
(*PD\ KSH*)  # BSD ksh can handle history management without hurting itself
	HISTCONTROL=ignoredups:ignorespace
	HISTFILE=~/.history
	HISTSIZE=$((HISTSIZE * 100))
	;;
(*)
	HISTFILE=/dev/null  # some shells don't close HISTFILE when it's merely unset
	unset HISTFILE
	;;
esac

# Define aliases
alias doas='doas '
alias lc='ls -C'
alias ll='ls -Fl'
alias ls='ls -1A'
$gui && alias pstree='pstree -wg2' || alias pstree='pstree -w'

# Define functions
. echo.sh
ppwd() {
	local h=$(cd ~ && pwd)
	local p=$PWD/
	case "$p" in
	($h/*)
		p=\~${p#$h}
		;;
	esac
	echo "${p%/}"
}

# Set shell options
if set -o | grep -q physical
then
	set -o physical
else
	# some shells don't have `physical'; brute force
	cd() {
		command cd "$@" && PWD=$(readlink -f .)
	}
fi
set -o vi

# Set prompt
case "$KSH_VERSION" in
(*PD\ KSH*)
	PS1='(\[\e[36m\]\u\[\e[m\]@\[\e[35m\]\h\[\e[m\]) \[\e[32m\]\t\[\e[m\] [\[\e[33m\]\w\[\e[m\]] {\[\e[31m\]$?\[\e[m\]}\n\$ '
	$gui && PS1='\[\e];\h [\w] \s\a\]'$PS1
	;;
(*)
	PS1='($USER@$HOSTNAME) $(date +%T) [$(e=$?; ppwd; exit $?)] {$?}
$ '
	;;
esac

# Set other environment variables
GPG_TTY=$(tty)
export GPG_TTY

# Set up exit trap
trap -- '[ -r ~/.logout ] && . ~/.logout' EXIT

# Clean up
unset gui
