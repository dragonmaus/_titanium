# ~/.shrc
# User-specific interactive shell configuration

# Clean up environment
HISTFILE=/dev/null
unset HISTFILE
case "$KSH_VERSION" in
(*PD\ KSH*) # BSD ksh can handle history management without hurting itself
	HISTCONTROL=ignoredups:ignorespace
	HISTFILE=~/.history
	HISTSIZE=$((HISTSIZE * 100))
	;;
esac
unset LS_COLORS

# Define aliases
alias doas='doas '
alias lc='ls -C'
alias ll='ls -Fl'
alias ls='ls -1A'
alias pstree='pstree -w'

# Define functions
. echo.sh
ppwd() {
	local h=$(cd ~ && pwd)
	local p=$PWD/
	case "$p" in
	($h/*)
		p=\~${p#$h}
		;;
	esac
	echo "${p%/}"
}

# Set shell options
# not all shells have `set -o physical'; brute force if necessary
if COLUMNS=4 set -o | grep -q '^physical '
then
	set -o physical
else
	cd() {
		command cd "$@" && PWD=$(readlink -f .)
	}
fi
set -o vi

# Set prompt
if [ -n "$KSH_VERSION" ]
then
	PS1=$(
		typeset cyan='\e[36m'
		typeset green='\e[32m'
		typeset magenta='\e[35m'
		typeset ppwd='$(e=$?; ppwd; exit $e)'
		typeset reset='\e[m'
		typeset yellow='\e[33m'
		case "$TERM" in
		(linux|linux-*)
			;;
		(*)
			print -n '\e];'
			print -n '$HOSTNAME'
			print -n ' '
			print -n "[$ppwd]"
			print -n ' '
			print -n "$(basename $SHELL)"
			print -n '\a'
			;;
		esac
		print -n "($cyan\$USER$reset@$magenta\$HOSTNAME$reset)"
		print -n ' '
		print -n "$green\$(date +%T)$reset"
		print -n ' '
		print -n "[$yellow$ppwd$reset]"
		print
		print -n 'τ '
	)
else
	PS1=$(
		echo -n '($USER@$HOSTNAME)'
		echo -n ' '
		echo -n '$(date +%T)'
		echo -n ' '
		echo -n '[$(e=$?; ppwd; exit $e)]'
		echo
		echo -n 'τ '
	)
fi

# Set other environment variables
GPG_TTY=$(tty)
export GPG_TTY

# Set exit trap
trap -- '[ -r ~/.logout ] && . ~/.logout' EXIT
